// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func SystemStatus() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"status-header\"><h1>📊 Estado del Sistema Híbrido</h1><p>Información detallada sobre runtimes, capacidades y estado del sistema</p></div><!-- Información del Sistema --><div class=\"system-info-section\"><div class=\"info-card\"><h3>💻 Información del Sistema</h3><div class=\"info-grid\" id=\"systemInfo\"><div class=\"info-item\"><span class=\"info-label\">Sistema Operativo:</span> <span class=\"info-value\" id=\"systemOS\">-</span></div><div class=\"info-item\"><span class=\"info-label\">Arquitectura:</span> <span class=\"info-value\" id=\"systemArch\">-</span></div><div class=\"info-item\"><span class=\"info-label\">Hostname:</span> <span class=\"info-value\" id=\"systemHostname\">-</span></div><div class=\"info-item\"><span class=\"info-label\">Uptime:</span> <span class=\"info-value\" id=\"systemUptime\">-</span></div></div></div><div class=\"info-card\"><h3>🏗️ Runtime Preferido</h3><div class=\"runtime-preferred\" id=\"preferredRuntimeCard\"><div class=\"runtime-icon\" id=\"preferredRuntimeIcon\">🤖</div><div class=\"runtime-info\"><div class=\"runtime-name\" id=\"preferredRuntimeName\">-</div><div class=\"runtime-status\" id=\"preferredRuntimeStatus\">-</div></div></div></div></div><!-- Runtimes Disponibles --><div class=\"runtimes-section\"><h2>🚀 Runtimes Disponibles</h2><div class=\"runtimes-grid\" id=\"runtimesGrid\"><div class=\"loading\"><h3>🔄 Cargando información de runtimes...</h3></div></div></div><!-- Capacidades del Sistema --><div class=\"capabilities-section\"><h2>⚙️ Capacidades del Sistema</h2><div class=\"capabilities-grid\"><div class=\"capability-card\"><h3>🔧 Lenguajes Soportados</h3><div class=\"capability-content\" id=\"supportedLanguages\"><div class=\"loading\">Cargando...</div></div></div><div class=\"capability-card\"><h3>🐳 Imágenes Base</h3><div class=\"capability-content\" id=\"supportedImages\"><div class=\"loading\">Cargando...</div></div></div><div class=\"capability-card\"><h3>🔌 Funciones Disponibles</h3><div class=\"capability-content\" id=\"availableFeatures\"><div class=\"loading\">Cargando...</div></div></div></div></div><!-- Información de Aplicaciones --><div class=\"apps-overview-section\"><h2>📱 Resumen de Aplicaciones</h2><div class=\"apps-stats\" id=\"appsStats\"><div class=\"stat-card\"><div class=\"stat-icon\">📊</div><div class=\"stat-info\"><div class=\"stat-number\" id=\"totalAppsCount\">-</div><div class=\"stat-label\">Total de Apps</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\">✅</div><div class=\"stat-info\"><div class=\"stat-number\" id=\"runningAppsCount\">-</div><div class=\"stat-label\">Ejecutándose</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\">🔄</div><div class=\"stat-info\"><div class=\"stat-number\" id=\"deployingAppsCount\">-</div><div class=\"stat-label\">Deployando</div></div></div><div class=\"stat-card\"><div class=\"stat-icon\">❌</div><div class=\"stat-info\"><div class=\"stat-number\" id=\"errorAppsCount\">-</div><div class=\"stat-label\">Con Errores</div></div></div></div></div><!-- Acciones del Sistema --><div class=\"system-actions\"><h2>🔧 Mantenimiento del Sistema</h2><div class=\"actions-grid\"><button onclick=\"pruneImages()\" class=\"action-btn btn-warning\">🗑️ Limpiar Imágenes</button> <button onclick=\"refreshStatus()\" class=\"action-btn btn-primary\">🔄 Actualizar Estado</button> <button onclick=\"exportSystemInfo()\" class=\"action-btn btn-secondary\">📥 Exportar Información</button></div></div><style>\n        .status-header {\n            text-align: center;\n            margin-bottom: 30px;\n            background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);\n            color: #ecf0f1;\n            padding: 40px;\n            border-radius: 15px;\n            box-shadow: 0 10px 30px rgba(0,0,0,0.5);\n        }\n        .status-header h1 {\n            font-size: 2.5em;\n            margin-bottom: 10px;\n            font-weight: 300;\n        }\n        .status-header p {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n\n        .system-info-section {\n            display: grid;\n            grid-template-columns: 2fr 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n\n        .info-card {\n            background: #2d2d2d;\n            padding: 25px;\n            border-radius: 15px;\n            border: 1px solid #444;\n            box-shadow: 0 4px 15px rgba(0,0,0,0.3);\n        }\n        .info-card h3 {\n            color: #ecf0f1;\n            margin-bottom: 20px;\n            font-size: 1.3em;\n        }\n        .info-grid {\n            display: grid;\n            gap: 15px;\n        }\n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 10px 0;\n            border-bottom: 1px solid #444;\n        }\n        .info-item:last-child {\n            border-bottom: none;\n        }\n        .info-label {\n            color: #bdc3c7;\n            font-weight: 500;\n        }\n        .info-value {\n            color: #3498db;\n            font-family: 'Courier New', monospace;\n            font-weight: 600;\n        }\n\n        .runtime-preferred {\n            display: flex;\n            align-items: center;\n            gap: 20px;\n            padding: 20px;\n            background: #1a1a1a;\n            border-radius: 10px;\n            border: 2px solid #3498db;\n        }\n        .runtime-icon {\n            font-size: 3em;\n            line-height: 1;\n        }\n        .runtime-info {\n            flex: 1;\n        }\n        .runtime-name {\n            font-size: 1.2em;\n            font-weight: 600;\n            color: #ecf0f1;\n            margin-bottom: 5px;\n        }\n        .runtime-status {\n            color: #27ae60;\n            font-size: 0.9em;\n        }\n\n        .runtimes-section, .capabilities-section, .apps-overview-section {\n            margin-bottom: 40px;\n        }\n        .runtimes-section h2, .capabilities-section h2, .apps-overview-section h2 {\n            color: #ecf0f1;\n            margin-bottom: 20px;\n            font-size: 1.5em;\n        }\n\n        .runtimes-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n        }\n        .runtime-card {\n            background: #2d2d2d;\n            padding: 20px;\n            border-radius: 10px;\n            border: 1px solid #444;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n        .runtime-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(0,0,0,0.4);\n        }\n        .runtime-card.available {\n            border-color: #27ae60;\n        }\n        .runtime-card.unavailable {\n            border-color: #e74c3c;\n            opacity: 0.7;\n        }\n        .runtime-header {\n            display: flex;\n            align-items: center;\n            gap: 15px;\n            margin-bottom: 15px;\n        }\n        .runtime-header .runtime-icon {\n            font-size: 2em;\n        }\n        .runtime-title {\n            font-size: 1.2em;\n            font-weight: 600;\n            color: #ecf0f1;\n        }\n        .runtime-availability {\n            padding: 4px 8px;\n            border-radius: 12px;\n            font-size: 0.8em;\n            font-weight: 600;\n            text-transform: uppercase;\n        }\n        .runtime-availability.available {\n            background: #27ae60;\n            color: #ecf0f1;\n        }\n        .runtime-availability.unavailable {\n            background: #e74c3c;\n            color: #ecf0f1;\n        }\n        .runtime-details {\n            color: #bdc3c7;\n            font-size: 0.9em;\n            line-height: 1.4;\n        }\n\n        .capabilities-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n        }\n        .capability-card {\n            background: #2d2d2d;\n            padding: 20px;\n            border-radius: 10px;\n            border: 1px solid #444;\n            min-height: 200px;\n        }\n        .capability-card h3 {\n            color: #ecf0f1;\n            margin-bottom: 15px;\n            font-size: 1.1em;\n        }\n        .capability-content {\n            color: #bdc3c7;\n            line-height: 1.6;\n        }\n        .capability-list {\n            list-style: none;\n            padding: 0;\n        }\n        .capability-list li {\n            padding: 5px 0;\n            border-bottom: 1px solid #444;\n        }\n        .capability-list li:last-child {\n            border-bottom: none;\n        }\n        .capability-tag {\n            display: inline-block;\n            background: #3498db;\n            color: #ecf0f1;\n            padding: 2px 8px;\n            border-radius: 4px;\n            font-size: 0.8em;\n            margin: 2px;\n        }\n\n        .apps-stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n        }\n        .stat-card {\n            background: #2d2d2d;\n            padding: 20px;\n            border-radius: 10px;\n            border: 1px solid #444;\n            display: flex;\n            align-items: center;\n            gap: 15px;\n        }\n        .stat-icon {\n            font-size: 2em;\n            line-height: 1;\n        }\n        .stat-number {\n            font-size: 1.8em;\n            font-weight: bold;\n            color: #3498db;\n        }\n        .stat-label {\n            color: #bdc3c7;\n            font-size: 0.9em;\n        }\n\n        .system-actions {\n            text-align: center;\n            padding: 30px;\n            background: #2d2d2d;\n            border-radius: 15px;\n            border: 1px solid #444;\n        }\n        .system-actions h2 {\n            color: #ecf0f1;\n            margin-bottom: 20px;\n            font-size: 1.4em;\n        }\n        .actions-grid {\n            display: flex;\n            justify-content: center;\n            gap: 20px;\n            flex-wrap: wrap;\n        }\n        .action-btn {\n            padding: 15px 30px;\n            border: none;\n            border-radius: 8px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            text-decoration: none;\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n        }\n        .action-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n        }\n\n        .loading {\n            text-align: center;\n            color: #bdc3c7;\n            font-style: italic;\n        }\n\n        /* Responsive */\n        @media (max-width: 768px) {\n            .system-info-section {\n                grid-template-columns: 1fr;\n            }\n            .actions-grid {\n                flex-direction: column;\n                align-items: center;\n            }\n            .action-btn {\n                width: 100%;\n                max-width: 300px;\n            }\n        }\n    </style><script>\n        let systemStatusData = null;\n        let appsData = null;\n\n        // Inicializar página\n        document.addEventListener('DOMContentLoaded', function() {\n            loadSystemStatus();\n            loadAppsOverview();\n        });\n\n        // Cargar estado del sistema\n        async function loadSystemStatus() {\n            try {\n                const response = await fetch('/api/unified/status');\n                const data = await response.json();\n                systemStatusData = data.data;\n\n                updateSystemInfo(systemStatusData);\n                updateRuntimesGrid(systemStatusData);\n                updateCapabilities(systemStatusData);\n\n            } catch (error) {\n                console.error('Error cargando estado del sistema:', error);\n            }\n        }\n\n        // Actualizar información del sistema\n        function updateSystemInfo(data) {\n            document.getElementById('systemOS').textContent = data.system.os || 'N/A';\n            document.getElementById('systemArch').textContent = data.system.architecture || 'N/A';\n            document.getElementById('systemHostname').textContent = window.location.hostname || 'localhost';\n            document.getElementById('systemUptime').textContent = formatUptime(Date.now() - new Date(data.timestamp).getTime());\n\n            // Runtime preferido\n            const preferredRuntime = data.runtime.preferred;\n            document.getElementById('preferredRuntimeName').textContent = preferredRuntime.toUpperCase();\n            document.getElementById('preferredRuntimeStatus').textContent = 'Activo y disponible';\n            document.getElementById('preferredRuntimeIcon').textContent = getRuntimeIcon(preferredRuntime);\n        }\n\n        // Actualizar grid de runtimes\n        function updateRuntimesGrid(data) {\n            const grid = document.getElementById('runtimesGrid');\n            const availableRuntimes = data.runtime.available || [];\n\n            grid.innerHTML = '';\n\n            const allRuntimes = [\n                { name: 'docker', title: 'Docker', icon: '🐳', description: 'Contenedores Docker con API nativa' },\n                { name: 'lxc', title: 'LXC', icon: '📦', description: 'Contenedores Linux ligeros' },\n                { name: 'containerd', title: 'containerd', icon: '🏗️', description: 'Runtime de contenedores de alto rendimiento' }\n            ];\n\n            allRuntimes.forEach(runtime => {\n                const isAvailable = availableRuntimes.includes(runtime.name);\n                const card = document.createElement('div');\n                card.className = 'runtime-card ' + (isAvailable ? 'available' : 'unavailable');\n\n                card.innerHTML = '<div class=\"runtime-header\">' +\n                    '<div class=\"runtime-icon\">' + runtime.icon + '</div>' +\n                    '<div class=\"runtime-title\">' + runtime.title + '</div>' +\n                    '<div class=\"runtime-availability ' + (isAvailable ? 'available' : 'unavailable') + '\">' +\n                    (isAvailable ? 'Disponible' : 'No disponible') +\n                    '</div>' +\n                    '</div>' +\n                    '<div class=\"runtime-details\">' +\n                    runtime.description +\n                    '</div>';\n\n                grid.appendChild(card);\n            });\n        }\n\n        // Actualizar capacidades\n        function updateCapabilities(data) {\n            // Lenguajes soportados\n            const languagesEl = document.getElementById('supportedLanguages');\n            const languages = data.runtime.supported_languages || [];\n                        languagesEl.innerHTML = languages.map(lang =>\n                '<span class=\"capability-tag\">' + lang.toUpperCase() + '</span>'\n            ).join('');\n\n            // Imágenes soportadas\n            const imagesEl = document.getElementById('supportedImages');\n            const images = data.runtime.supported_images || [];\n            imagesEl.innerHTML = '<ul class=\"capability-list\">' +\n                images.map(img => '<li>' + img + '</li>').join('') +\n                '</ul>';\n\n            // Funciones disponibles\n            const featuresEl = document.getElementById('availableFeatures');\n            const features = [\n                'Deployment automático',\n                'Detección de lenguajes',\n                'Health checks',\n                'Logs en tiempo real',\n                'Gestión de puertos',\n                'Limpieza automática'\n            ];\n            featuresEl.innerHTML = '<ul class=\"capability-list\">' +\n                features.map(feature => '<li>' + feature + '</li>').join('') +\n                '</ul>';\n        }\n\n        // Cargar resumen de aplicaciones\n        async function loadAppsOverview() {\n            try {\n                const response = await fetch('/api/v1/apps');\n                const data = await response.json();\n                appsData = data.data || [];\n\n                updateAppsStats(appsData);\n\n            } catch (error) {\n                console.error('Error cargando aplicaciones:', error);\n            }\n        }\n\n        // Actualizar estadísticas de aplicaciones\n        function updateAppsStats(apps) {\n            const totalApps = apps.length;\n            const runningApps = apps.filter(app => app.status === 'running').length;\n            const deployingApps = apps.filter(app => app.status === 'deploying').length;\n            const errorApps = apps.filter(app => app.status === 'error').length;\n\n            document.getElementById('totalAppsCount').textContent = totalApps;\n            document.getElementById('runningAppsCount').textContent = runningApps;\n            document.getElementById('deployingAppsCount').textContent = deployingApps;\n            document.getElementById('errorAppsCount').textContent = errorApps;\n        }\n\n        // Utilidades\n        function getRuntimeIcon(runtime) {\n            const icons = {\n                'docker': '🐳',\n                'lxc': '📦',\n                'containerd': '🏗️'\n            };\n            return icons[runtime] || '🤖';\n        }\n\n        function formatUptime(ms) {\n            const seconds = Math.floor(ms / 1000);\n            const minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            const days = Math.floor(hours / 24);\n\n            if (days > 0) return days + 'd ' + (hours % 24) + 'h';\n            if (hours > 0) return hours + 'h ' + (minutes % 60) + 'm';\n            if (minutes > 0) return minutes + 'm';\n            return seconds + 's';\n        }\n\n        // Acciones del sistema\n        async function pruneImages() {\n            try {\n                const response = await fetch('/api/v1/maintenance/prune-images', {\n                    method: 'POST'\n                });\n                const result = await response.json();\n\n                if (response.ok) {\n                    alert('✅ Imágenes limpiadas exitosamente');\n                } else {\n                    alert('❌ Error limpiando imágenes: ' + result.message);\n                }\n            } catch (error) {\n                alert('❌ Error de conexión: ' + error.message);\n            }\n        }\n\n        function refreshStatus() {\n            loadSystemStatus();\n            loadAppsOverview();\n        }\n\n        function exportSystemInfo() {\n            const info = {\n                system: systemStatusData,\n                apps: appsData,\n                timestamp: new Date().toISOString()\n            };\n\n            const blob = new Blob([JSON.stringify(info, null, 2)], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'diplo-system-info-' + new Date().toISOString().split('T')[0] + '.json';\n            a.click();\n            URL.revokeObjectURL(url);\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
